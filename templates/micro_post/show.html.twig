{% extends 'base.html.twig' %}

{% block title %}Post - {{post.title}}{% endblock %}

{% block bread %}
    â†’ Post
{% endblock %}

{% block body %}
    <div class="flex items-center mb-4">
        <div>
            {{ include('shared/_avatar.html.twig', { profile: post.author.userProfile, size: 16 }) }}
        </div>
        <div class="ml-4">
            <div class="text-xl">
                {{ post.author.userProfile.name ?? post.author.email }}
            </div>
            <div class="text-sm text-gray-500 dark:text-gray-400">
                <a href="{{ path('app_profile', { id: post.author.id }) }}">
                    {{ post.author.email }}
                </a>
            </div>
        </div>
    </div>
    {{include('micro_post/_post.html.twig', {post:post})}}
    <div class="mt-4">
        {% for comment in post.comments %}
            <div>
                <div class="flex items-center">
                    <div class="mr-2">{{ include('shared/_avatar.html.twig', { profile: comment.author.userProfile, size: 8 }) }}</div>
                    <div>
                        <div class="font-medium text-gray-800 dark:text-gray-300">
                            <a href="{{path('app_profile', {id:comment.author.id})}}">{{ comment.author.email }}</a>
                        </div>
                        <div class="font-light text-gray-500 dark:text-gray-500">{{ comment.created | date("M j, Y")}}</div>
                    </div>
                </div>
                <div class="flex">
                    <div class="border ml-4 mr-6 pb-12 {% if not loop.last %}border-gray-300 dark:border-gray-600{% else %}border-transparent{% endif %}"></div>
                    <div>{{comment.text}}</div>
                </div>
            </div>
        {% endfor %}
    </div>
    <script>
        /*this function is useful to delete a post calling app_micro_post_delete route of MicroPostController*/
        function del(url,post_id){
            if(
                window.confirm('Do you really want to delete this post?')
            ){
                loadXMLDoc(url,post_id);
            }
        }
        function loadXMLDoc(url,post_id) {
            var xmlhttp = new XMLHttpRequest();

            xmlhttp.onreadystatechange = function() {
                if (xmlhttp.readyState == XMLHttpRequest.DONE) { // XMLHttpRequest.DONE == 4
                    if (xmlhttp.status == 200) {
                        document.getElementById('post-'+post_id).remove();
                    }
                    else if (xmlhttp.status == 400) {
                        alert('There was an error 400');
                    }
                    else {
                        alert('something else other than 200 was returned');
                    }
                }
            };

            xmlhttp.open("DELETE", url, true);
            xmlhttp.send();
        }
    </script>
{% endblock %}